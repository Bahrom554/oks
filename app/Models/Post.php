<?php

namespace App\Models;

use App\Traits\Translatable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use Illuminate\Support\Str;
use Modules\Filemanager\Entities\Files;

class Post extends Model
{
    use Translatable;

    protected $table = 'post';

    protected $with = ['file'];

    protected $fillable = ['title', 'description', 'content', 'slug', 'top', 'popular', 'type', 'file_id', 'documents', 'video', 'photo_author', 'published_at', 'created_at', 'updated_at', 'lang', 'lang_hash', 'status', 'deleted_at',];

    public static function rules()
    {
        return [
            'title' => 'string|required',
            'slug' => 'string|nullable',
            'description' => 'string|nullable',
            'content' => 'string|nullable',
            'top' => 'integer|nullable',
            'popular' => 'integer|nullable',
            'type' => 'integer|nullable',
            'file_id' => 'integer|nullable',
            'documents' => 'string|nullable',
            'video' => 'string|nullable',
            'photo_author' => 'string|nullable',
            'published_at' => 'string|nullable',
            'created_at' => 'datetime|nullable',
            'updated_at' => 'datetime|nullable',
            'lang' => 'integer|nullable',
            'lang_hash' => 'string|nullable',
            'status' => 'integer|nullable',
            'deleted_at' => 'datetime|nullable',
        ];
    }
    public function getDocuments0Attribute()
    {
        if(!empty($this->documents)){
            return Files::whereIn('id', explode(',', $this->documents))->get();
        }
        return null;

    }




    public function setTitleAttribute($value)
    {
        $this->setTranslation($value, 'title');
    }

    public function getTranslationsAttribute(): array
    {
        return $this->getTranslation('post');
    }


    public function setSlugAttribute($value)
    {
        $this->attributes['slug'] = empty($value) ?
            Str::slug($this->attributes['title'])
            : str_replace(' ', '-', $value);
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::created(function ($model){
            $model->slug .= $model->id;
            $model->save();
        });
    }

    public function file(): BelongsTo
    {
        return $this->belongsTo(Files::class);
    }
}
